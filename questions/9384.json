{"id":9384,"difficulty":"hard","title":"maximum","code":"/*\n  9384 - Maximum\n  -------\n  by ch3cknull (@ch3cknull) #上級 #array\n\n  ### 質問\n\n  ### Description\n\n  Implement the type `Maximum`, which takes an input type `T`, and returns the maximum value in `T`.\n\n  If `T` is an empty array, it returns `never`. **Negative numbers** are not considered.\n\n  For example:\n\n  ```ts\n  Maximum<[]> // never\n  Maximum<[0, 2, 1]> // 2\n  Maximum<[1, 20, 200, 150]> // 200\n  ```\n\n  ### Advanced\n\n  Can you implement type `Minimum` inspired by `Maximum`?\n\n  > GitHubで確認する：https://tsch.js.org/9384/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Maximum<T extends any[]> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<Maximum<[]>, never>>,\r\n  Expect<Equal<Maximum<[0, 2, 1]>, 2>>,\r\n  Expect<Equal<Maximum<[1, 20, 200, 150]>, 200>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/9384/answer/ja\n  > 解答を見る：https://tsch.js.org/9384/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}