{"id":30970,"title":"shitariteraru","difficulty":"medium","code":"/*\n  30970 - 確定した文字列リテラル\n  -------\n  by 蛭子屋双六 (@sugoroku-y) #中級\n\n  ### 質問\n\n  確定した文字列リテラル型かどうか、を判別したい場合があります。例えばクラスの識別子として指定された型が確定した文字列リテラル型であるか確認したいときです。\n\n  ```ts\n  type Action<ID extends string> = { readonly id: ID };\n  ```\n\n  確定している必要があるので以下の型はfalseと判定する必要があります。\n\n  - never型\n  - 文字列リテラル型のUnion\n  - string、number、bigint、booleanが埋め込まれたテンプレートリテラル型\n\n  与えられた型Sが確定した文字列リテラル型かどうかを判別して下さい\n\n  > GitHubで確認する：https://tsch.js.org/30970/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype IsFixedStringLiteralType<S extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype testcase =\r\n  | Expect<Equal<IsFixedStringLiteralType<'ABC'>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<string>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<'ABC' | 'DEF'>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<never>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${string}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${string & {}}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${number}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${bigint}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${boolean}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${true}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${false}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${null}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${undefined}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${string}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${string & {}}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${number}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${bigint}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${boolean}`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${true}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${false}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${null}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${undefined}`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${string}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${string & {}}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${number}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${bigint}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${boolean}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${true}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${false}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${null}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`${undefined}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${string}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${string & {}}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${number}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${bigint}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${boolean}DEF`>, false>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${true}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${false}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${null}DEF`>, true>>\r\n  | Expect<Equal<IsFixedStringLiteralType<`ABC${undefined}DEF`>, true>>\r\n  | true\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/30970/answer/ja\n  > 解答を見る：https://tsch.js.org/30970/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}