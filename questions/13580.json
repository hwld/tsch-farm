{"id":13580,"difficulty":"hard","title":"replace-union","code":"/*\n  13580 - Replace Union\n  -------\n  by Konstantin Barabanov (@crutch12) #上級\n\n  ### 質問\n\n  Given an `union of types` and `array of type pairs` to replace (`[[string, number], [Date, null]]`), return a new union replaced with the `type pairs`.\n\n  > GitHubで確認する：https://tsch.js.org/13580/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype UnionReplace<T, U extends [any, any][]> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\ntype cases = [\r\n  // string -> null\r\n  Expect<Equal<UnionReplace<number | string, [[string, null]]>, number | null>>,\r\n\r\n  // string -> null\r\n  Expect<Equal<UnionReplace<number | string, [[string, null], [Date, Function]]>, number | null>>,\r\n\r\n  // Date -> string; Function -> undefined\r\n  Expect<Equal<UnionReplace<Function | Date | object, [[Date, string], [Function, undefined]]>, undefined | string | object>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/13580/answer/ja\n  > 解答を見る：https://tsch.js.org/13580/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}