{"id":114,"difficulty":"hard","title":"camelcase","code":"/*\n  114 - CamelCase\n  -------\n  by Anthony Fu (@antfu) #上級 #template-literal\n\n  ### 質問\n\n  `snake_case` 文字列を `camelCase` に変換する `CamelCase <T>` を実装します。\n\n  例えば\n\n  ```ts\n  type camelCase1 = CamelCase<'hello_world_with_types'> // expected to be 'helloWorldWithTypes'\n  type camelCase2 = CamelCase<'HELLO_WORLD_WITH_TYPES'> // expected to be same as previous one\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/114/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype CamelCase<S extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<CamelCase<'foobar'>, 'foobar'>>,\n  Expect<Equal<CamelCase<'FOOBAR'>, 'foobar'>>,\n  Expect<Equal<CamelCase<'foo_bar'>, 'fooBar'>>,\n  Expect<Equal<CamelCase<'foo__bar'>, 'foo_Bar'>>,\n  Expect<Equal<CamelCase<'foo_$bar'>, 'foo_$bar'>>,\n  Expect<Equal<CamelCase<'foo_bar_'>, 'fooBar_'>>,\n  Expect<Equal<CamelCase<'foo_bar__'>, 'fooBar__'>>,\n  Expect<Equal<CamelCase<'foo_bar_$'>, 'fooBar_$'>>,\n  Expect<Equal<CamelCase<'foo_bar_hello_world'>, 'fooBarHelloWorld'>>,\n  Expect<Equal<CamelCase<'HELLO_WORLD_WITH_TYPES'>, 'helloWorldWithTypes'>>,\n  Expect<Equal<CamelCase<'-'>, '-'>>,\n  Expect<Equal<CamelCase<''>, ''>>,\n  Expect<Equal<CamelCase<'😎'>, '😎'>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/114/answer/ja\n  > 解答を見る：https://tsch.js.org/114/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}