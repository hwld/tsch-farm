{"id":545,"title":"printf","difficulty":"hard","code":"/*\n  545 - printf\n  -------\n  by null (@Bestmain-YS) #上級 #template-literal\n\n  ### 質問\n\n  汎用的な`Format<T extends string>`を実装します。\n\n  例えば、\n\n  ```ts\n  type FormatCase1 = Format<'%sabc'>; // FormatCase1 : string => string\n  type FormatCase2 = Format<'%s%dabc'>; // FormatCase2 : string => number => string\n  type FormatCase3 = Format<'sdabc'>; // FormatCase3 :  string\n  type FormatCase4 = Format<'sd%abc'>; // FormatCase4 :  string\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/545/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Format<T extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Format<'abc'>, string>>,\n  Expect<Equal<Format<'a%sbc'>, (s1: string) => string>>,\n  Expect<Equal<Format<'a%dbc'>, (d1: number) => string>>,\n  Expect<Equal<Format<'a%%dbc'>, string>>,\n  Expect<Equal<Format<'a%%%dbc'>, (d1: number) => string>>,\n  Expect<Equal<Format<'a%dbc%s'>, (d1: number) => (s1: string) => string>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/545/answer/ja\n  > 解答を見る：https://tsch.js.org/545/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}