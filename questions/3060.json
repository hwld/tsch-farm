{"id":3060,"difficulty":"easy","title":"unshift","code":"/*\n  3060 - Unshift\n  -------\n  by jiangshan (@jiangshanmeta) #初級 #array\n\n  ### 質問\n\n  ```Array.unshift```の型バージョンを実装します。\n\n  例えば：\n\n  ```typescript\n  type Result = Unshift<[1, 2], 0> // [0, 1, 2]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/3060/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Unshift<T, U> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Unshift<[], 1>, [1]>>,\n  Expect<Equal<Unshift<[1, 2], 0>, [0, 1, 2]>>,\n  Expect<Equal<Unshift<['1', 2, '3'], boolean>, [boolean, '1', 2, '3']>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/3060/answer/ja\n  > 解答を見る：https://tsch.js.org/3060/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}