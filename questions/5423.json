{"id":5423,"difficulty":"hard","title":"intersection","code":"/*\n  5423 - Intersection\n  -------\n  by Pineapple (@Pineapple0919) #上級 #union #array\n\n  ### 質問\n\n  Implement the type version of Lodash.intersection with a little difference. Intersection<T> takes an Array T containing several arrays or any type element including the union type, and returns a new union containing all intersection elements.\n\n  ```ts\n  type Res = Intersection<[[1, 2], [2, 3], [2, 2]]>; // expected to be 2\n  type Res1 = Intersection<[[1, 2, 3], [2, 3, 4], [2, 2, 3]]>; // expected to be 2 | 3\n  type Res2 = Intersection<[[1, 2], [3, 4], [5, 6]]>; // expected to be never\n  type Res3 = Intersection<[[1, 2, 3], [2, 3, 4], 3]>; // expected to be 3\n  type Res4 = Intersection<[[1, 2, 3], 2 | 3 | 4, 2 | 3]>; // expected to be 2 | 3\n  type Res5 = Intersection<[[1, 2, 3], 2, 3]>; // expected to be never\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/5423/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Intersection<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Intersection<[[1, 2], [2, 3], [2, 2]]>, 2>>,\n  Expect<Equal<Intersection<[[1, 2, 3], [2, 3, 4], [2, 2, 3]]>, 2 | 3>>,\n  Expect<Equal<Intersection<[[1, 2], [3, 4], [5, 6]]>, never>>,\n  Expect<Equal<Intersection<[[1, 2, 3], [2, 3, 4], 3]>, 3>>,\n  Expect<Equal<Intersection<[[1, 2, 3], 2 | 3 | 4, 2 | 3]>, 2 | 3>>,\n  Expect<Equal<Intersection<[[1, 2, 3], 2, 3]>, never>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/5423/answer/ja\n  > 解答を見る：https://tsch.js.org/5423/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}