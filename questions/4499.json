{"id":4499,"difficulty":"medium","title":"chunk","code":"/*\n  4499 - Chunk\n  -------\n  by キリサメ qianxi (@qianxi0410) #中級 #tuple\n\n  ### 質問\n\n  Do you know `lodash`? `Chunk` is a very useful function in it, now let's implement it.\n  `Chunk<T, N>` accepts two required type parameters, the `T` must be a `tuple`, and the `N` must be an `integer >=1`\n\n  ```ts\n  type exp1 = Chunk<[1, 2, 3], 2> // expected to be [[1, 2], [3]]\n  type exp2 = Chunk<[1, 2, 3], 4> // expected to be [[1, 2, 3]]\n  type exp3 = Chunk<[1, 2, 3], 1> // expected to be [[1], [2], [3]]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/4499/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Chunk = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Chunk<[], 1>, []>>,\n  Expect<Equal<Chunk<[1, 2, 3], 1>, [[1], [2], [3]]>>,\n  Expect<Equal<Chunk<[1, 2, 3], 2>, [[1, 2], [3]]>>,\n  Expect<Equal<Chunk<[1, 2, 3, 4], 2>, [[1, 2], [3, 4]]>>,\n  Expect<Equal<Chunk<[1, 2, 3, 4], 5>, [[1, 2, 3, 4]]>>,\n  Expect<Equal<Chunk<[1, true, 2, false], 2>, [[1, true], [2, false]]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/4499/answer/ja\n  > 解答を見る：https://tsch.js.org/4499/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}