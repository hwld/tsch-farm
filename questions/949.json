{"id":949,"difficulty":"medium","title":"anyof","code":"/*\n  949 - AnyOf\n  -------\n  by null (@kynefuk) #中級 #array\n\n  ### 質問\n\n  Implement Python liked `any` function in the type system. A type takes the Array and returns `true` if any element of the Array is true. If the Array is empty, return `false`.\n\n  For example:\n\n  ```ts\n  type Sample1 = AnyOf<[1, \"\", false, [], {}]> // expected to be true.\n  type Sample2 = AnyOf<[0, \"\", false, [], {}]> // expected to be false.\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/949/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype AnyOf<T extends readonly any[]> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<AnyOf<[1, 'test', true, [1], { name: 'test' }, { 1: 'test' }]>, true>>,\n  Expect<Equal<AnyOf<[1, '', false, [], {}]>, true>>,\n  Expect<Equal<AnyOf<[0, 'test', false, [], {}]>, true>>,\n  Expect<Equal<AnyOf<[0, '', true, [], {}]>, true>>,\n  Expect<Equal<AnyOf<[0, '', false, [1], {}]>, true>>,\n  Expect<Equal<AnyOf<[0, '', false, [], { name: 'test' }]>, true>>,\n  Expect<Equal<AnyOf<[0, '', false, [], { 1: 'test' }]>, true>>,\n  Expect<Equal<AnyOf<[0, '', false, [], { name: 'test' }, { 1: 'test' }]>, true>>,\n  Expect<Equal<AnyOf<[0, '', false, [], {}, undefined, null]>, false>>,\n  Expect<Equal<AnyOf<[]>, false>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/949/answer/ja\n  > 解答を見る：https://tsch.js.org/949/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}