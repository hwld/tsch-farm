{"id":2852,"title":"omitbytype","difficulty":"medium","code":"/*\n  2852 - OmitByType\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #object\n\n  ### 質問\n\n  From ```T```, pick a set of properties whose type are not assignable to ```U```.\n\n  For Example\n\n  ```typescript\n  type OmitBoolean = OmitByType<{\n    name: string\n    count: number\n    isReadonly: boolean\n    isEnable: boolean\n  }, boolean> // { name: string; count: number }\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/2852/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype OmitByType<T, U> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ninterface Model {\n  name: string\n  count: number\n  isReadonly: boolean\n  isEnable: boolean\n}\n\ntype cases = [\n  Expect<Equal<OmitByType<Model, boolean>, { name: string, count: number }>>,\n  Expect<Equal<OmitByType<Model, string>, { count: number, isReadonly: boolean, isEnable: boolean }>>,\n  Expect<Equal<OmitByType<Model, number>, { name: string, isReadonly: boolean, isEnable: boolean }>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/2852/answer/ja\n  > 解答を見る：https://tsch.js.org/2852/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}