{"id":4518,"difficulty":"medium","title":"fill","code":"/*\n  4518 - Fill\n  -------\n  by キリサメ qianxi (@qianxi0410) #中級 #tuple\n\n  ### 質問\n\n  `Fill`, a common JavaScript function, now let us implement it with types.\n  `Fill<T, N, Start?, End?>`, as you can see,`Fill` accepts four types of parameters, of which `T` and `N` are required parameters, and `Start` and `End` are optional parameters.\n  The requirements for these parameters are: `T` must be a `tuple`, `N` can be any type of value, `Start` and `End` must be integers greater than or equal to 0.\n\n  ```ts\n  type exp = Fill<[1, 2, 3], 0> // expected to be [0, 0, 0]\n  ```\n  In order to simulate the real function, the test may contain some boundary conditions, I hope you can enjoy it :)\n\n  > GitHubで確認する：https://tsch.js.org/4518/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Fill<\n  T extends unknown[],\n  N,\n  Start extends number = 0,\n  End extends number = T['length'],\n> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Fill<[], 0>, []>>,\n  Expect<Equal<Fill<[], 0, 0, 3>, []>>,\n  Expect<Equal<Fill<[1, 2, 3], 0, 0, 0>, [1, 2, 3]>>,\n  Expect<Equal<Fill<[1, 2, 3], 0, 2, 2>, [1, 2, 3]>>,\n  Expect<Equal<Fill<[1, 2, 3], 0>, [0, 0, 0]>>,\n  Expect<Equal<Fill<[1, 2, 3], true>, [true, true, true]>>,\n  Expect<Equal<Fill<[1, 2, 3], true, 0, 1>, [true, 2, 3]>>,\n  Expect<Equal<Fill<[1, 2, 3], true, 1, 3>, [1, true, true]>>,\n  Expect<Equal<Fill<[1, 2, 3], true, 10, 0>, [1, 2, 3]>>,\n  Expect<Equal<Fill<[1, 2, 3], true, 10, 20>, [1, 2, 3]>>,\n  Expect<Equal<Fill<[1, 2, 3], true, 0, 10>, [true, true, true]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/4518/answer/ja\n  > 解答を見る：https://tsch.js.org/4518/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}