{"id":6,"difficulty":"hard","title":"simple-vue","code":"/*\n  6 - Simple Vue\n  -------\n  by Anthony Fu (@antfu) #上級 #this #application #vue\n\n  ### 質問\n\n  Vue ライクな型付けの簡略化されたバージョンを実装してください。\n\n  関数名 `SimpleVue` (`Vue.extend` や `defineComponent` のようなもの) を与えることで、computed や methods の中の `this` 型を適切に推論できます。\n\n  この課題では、SimpleVue が `data`、 `computed`、 `methods` フィールドを持つオブジェクトを唯一の引数として受け取れることにします。\n\n  - `data` はコンテキスト `this` を公開するオブジェクトを返す単純な関数ですが、自身や算出プロパティ、メソッドにアクセスできません。\n\n  - `computed` は、コンテキストを `this` として受け取り何らかの計算をし、その結果を返す関数のオブジェクトです。計算された結果は、関数ではなくプレーンな戻り値としてコンテキストに公開されなければなりません。\n\n  - `methods` は同様に `this` をコンテキストとする関数のオブジェクトです。メソッドは他の `methods` と同様に `data`、 `computed`、 `methods` で公開されているフィールドにアクセスできます。`computed` と異なるのは、`method` がそのまま関数として公開されている点です。\n\n  `SimpleVue` の戻り値の型は任意です。\n\n  ```ts\n  const instance = SimpleVue({\n    data() {\n      return {\n        firstname: 'Type',\n        lastname: 'Challenges',\n        amount: 10,\n      }\n    },\n    computed: {\n      fullname() {\n        return this.firstname + ' ' + this.lastname\n      }\n    },\n    methods: {\n      hi() {\n        alert(this.fullname.toLowerCase())\n      }\n    }\n  })\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/6/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ndeclare function SimpleVue(options: any): any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\nSimpleVue({\n  data() {\n    // @ts-expect-error\n    this.firstname\n    // @ts-expect-error\n    this.getRandom()\n    // @ts-expect-error\n    this.data()\n\n    return {\n      firstname: 'Type',\n      lastname: 'Challenges',\n      amount: 10,\n    }\n  },\n  computed: {\n    fullname() {\n      return `${this.firstname} ${this.lastname}`\n    },\n  },\n  methods: {\n    getRandom() {\n      return Math.random()\n    },\n    hi() {\n      alert(this.amount)\n      alert(this.fullname.toLowerCase())\n      alert(this.getRandom())\n    },\n    test() {\n      const fullname = this.fullname\n      const cases: [Expect<Equal<typeof fullname, string>>] = [] as any\n    },\n  },\n})\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/6/answer/ja\n  > 解答を見る：https://tsch.js.org/6/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}