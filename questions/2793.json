{"id":2793,"difficulty":"medium","title":"mutable","code":"/*\n  2793 - Mutable\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #readonly #object-keys\n\n  ### 質問\n\n  Implement the generic ```Mutable<T>``` which makes all properties in ```T``` mutable (not readonly).\n\n  For example\n\n  ```typescript\n  interface Todo {\n    readonly title: string\n    readonly description: string\n    readonly completed: boolean\n  }\n\n  type MutableTodo = Mutable<Todo> // { title: string; description: string; completed: boolean; }\n\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/2793/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Mutable<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ninterface Todo1 {\n  title: string\n  description: string\n  completed: boolean\n  meta: {\n    author: string\n  }\n}\n\ntype List = [1, 2, 3]\n\ntype cases = [\n  Expect<Equal<Mutable<Readonly<Todo1>>, Todo1>>,\n  Expect<Equal<Mutable<Readonly<List>>, List>>,\n]\n\ntype errors = [\n  // @ts-expect-error\n  Mutable<'string'>,\n  // @ts-expect-error\n  Mutable<0>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/2793/answer/ja\n  > 解答を見る：https://tsch.js.org/2793/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}