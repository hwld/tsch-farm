{"id":7258,"title":"object-key-paths","difficulty":"hard","code":"/*\n  7258 - Object Key Paths\n  -------\n  by CattChen (@ChenKS12138) #上級 #object-keys\n\n  ### 質問\n\n  Get all possible paths that could be called by [_.get](https://lodash.com/docs/4.17.15#get) (a lodash function) to get the value of an object\n\n  ```typescript\n  type T1 = ObjectKeyPaths<{ name: string; age: number }>; // expected to be 'name' | 'age'\n  type T2 = ObjectKeyPaths<{\n    refCount: number;\n    person: { name: string; age: number };\n  }>; // expected to be 'refCount' | 'person' | 'person.name' | 'person.age'\n  type T3 = ObjectKeyPaths<{ books: [{ name: string; price: number }] }>; // expected to be the superset of 'books' | 'books.0' | 'books[0]' | 'books.[0]' | 'books.0.name' | 'books.0.price' | 'books.length' | 'books.find'\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/7258/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype ObjectKeyPaths<T extends object> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect, ExpectExtends } from '@type-challenges/utils'\n\nconst ref = {\n  count: 1,\n  person: {\n    name: 'cattchen',\n    age: 22,\n    books: ['book1', 'book2'],\n    pets: [\n      {\n        type: 'cat',\n      },\n    ],\n  },\n}\n\ntype cases = [\n  Expect<Equal<ObjectKeyPaths<{ name: string, age: number }>, 'name' | 'age'>>,\n  Expect<\n  Equal<\n  ObjectKeyPaths<{\n    refCount: number\n    person: { name: string, age: number }\n  }>,\n  'refCount' | 'person' | 'person.name' | 'person.age'\n  >\n  >,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'count'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.name'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.age'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.books'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.pets'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.books.0'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.books.1'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.books[0]'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.books.[0]'>>,\n  Expect<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.pets.0.type'>>,\n  Expect<Equal<ExpectExtends<ObjectKeyPaths<typeof ref>, 'notExist'>, false>>,\n  Expect<Equal<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.notExist'>, false>>,\n  Expect<Equal<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.name.'>, false>>,\n  Expect<Equal<ExpectExtends<ObjectKeyPaths<typeof ref>, '.person.name'>, false>>,\n  Expect<Equal<ExpectExtends<ObjectKeyPaths<typeof ref>, 'person.pets.[0]type'>, false>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/7258/answer/ja\n  > 解答を見る：https://tsch.js.org/7258/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}