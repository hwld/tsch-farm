{"id":2822,"title":"split","difficulty":"hard","code":"/*\n  2822 - Split\n  -------\n  by Andrea Simone Costa (@jfet97) #上級 #string #split #array #tuple\n\n  ### 質問\n\n  The well known `split()` method splits a string into an array of substrings by looking for a separator, and returns the new array. The goal of this challenge is to split a string, by using a separator, but in the type system!\n\n  For example:\n\n  ```ts\n  type result = Split<'Hi! How are you?', ' '>  // should be ['Hi!', 'How', 'are', 'you?']\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/2822/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Split<S extends string, SEP extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Split<'Hi! How are you?'>, ['Hi! How are you?']>>,\n  Expect<Equal<Split<'Hi! How are you?', 'z'>, ['Hi! How are you?']>>,\n  Expect<Equal<Split<'Hi! How are you?', ' '>, ['Hi!', 'How', 'are', 'you?']>>,\n  Expect<Equal<Split<'Hi! How are you?', ''>, ['H', 'i', '!', ' ', 'H', 'o', 'w', ' ', 'a', 'r', 'e', ' ', 'y', 'o', 'u', '?']>>,\n  Expect<Equal<Split<'', ''>, []>>,\n  Expect<Equal<Split<'The sine in cosine', 'in'>, ['The s', 'e ', ' cos', 'e']>>,\n  Expect<Equal<Split<'Never say never, forever and ever.', 'ver'>, ['Ne', ' say ne', ', fore', ' and e', '.']>>,\n  Expect<Equal<Split<'', 'z'>, ['']>>,\n  Expect<Equal<Split<''>, ['']>>,\n  Expect<Equal<Split<string, 'whatever'>, string[]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/2822/answer/ja\n  > 解答を見る：https://tsch.js.org/2822/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}