{"id":2595,"title":"pickbytype","difficulty":"medium","code":"/*\n  2595 - PickByType\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #object\n\n  ### 質問\n\n  From `T`, pick a set of properties whose type are assignable to `U`.\n\n  For Example\n\n  ```typescript\n  type OnlyBoolean = PickByType<{\n    name: string\n    count: number\n    isReadonly: boolean\n    isEnable: boolean\n  }, boolean> // { isReadonly: boolean; isEnable: boolean; }\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/2595/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype PickByType<T, U> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ninterface Model {\n  name: string\n  count: number\n  isReadonly: boolean\n  isEnable: boolean\n}\n\ntype cases = [\n  Expect<Equal<PickByType<Model, boolean>, { isReadonly: boolean, isEnable: boolean }>>,\n  Expect<Equal<PickByType<Model, string>, { name: string }>>,\n  Expect<Equal<PickByType<Model, number>, { count: number }>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/2595/answer/ja\n  > 解答を見る：https://tsch.js.org/2595/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}