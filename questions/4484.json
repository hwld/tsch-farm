{"id":4484,"difficulty":"medium","title":"istuple","code":"/*\n  4484 - IsTuple\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #tuple\n\n  ### 質問\n\n  Implement a type ```IsTuple```, which takes an input type ```T``` and returns whether ```T``` is tuple type.\n\n  For example:\n\n  ```typescript\n  type case1 = IsTuple<[number]> // true\n  type case2 = IsTuple<readonly [number]> // true\n  type case3 = IsTuple<number[]> // false\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/4484/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype IsTuple<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<IsTuple<[]>, true>>,\n  Expect<Equal<IsTuple<[number]>, true>>,\n  Expect<Equal<IsTuple<readonly [1]>, true>>,\n  Expect<Equal<IsTuple<{ length: 1 }>, false>>,\n  Expect<Equal<IsTuple<number[]>, false>>,\n  Expect<Equal<IsTuple<never>, false>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/4484/answer/ja\n  > 解答を見る：https://tsch.js.org/4484/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}