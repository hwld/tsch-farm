{"id":6228,"title":"json-parser","difficulty":"extreme","code":"/*\n  6228 - JSON Parser\n  -------\n  by Hydration (@hydrati) #最上級 #template-literal #json\n\n  ### 質問\n\n  You're required to implement a type-level partly parser to parse JSON string into a object literal type.\n\n  Requirements:\n   - `Numbers` and `Unicode escape (\\uxxxx)` in JSON can be ignored. You needn't to parse them.\n\n  > GitHubで確認する：https://tsch.js.org/6228/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Pure<T> = {\n  [P in keyof T]: T[P] extends object ? Pure<T[P]> : T[P]\n}\n\ntype SetProperty<T, K extends PropertyKey, V> = {\n  [P in (keyof T) | K]: P extends K ? V : P extends keyof T ? T[P] : never\n}\n\ntype Token = any\ntype ParseResult<T, K extends Token[]> = [T, K]\ntype Tokenize<T extends string, S extends Token[] = []> = Token[]\ntype ParseLiteral<T extends Token[]> = ParseResult<any, T>\n\ntype Parse<T extends string> = Pure<ParseLiteral<Tokenize<T>>[0]>\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<(\n    Parse<`\n      {\n        \"a\": \"b\", \n        \"b\": false, \n        \"c\": [true, false, \"hello\", {\n          \"a\": \"b\", \n          \"b\": false\n        }], \n        \"nil\": null\n      }\n    `>\n  ), (\n    {\n      nil: null\n      c: [true, false, 'hello', {\n        a: 'b'\n        b: false\n      }]\n      b: false\n      a: 'b'\n    }\n\n  )>>,\n  Expect<Equal<Parse<'{}'>, {}>>,\n\n  Expect<Equal<Parse<'[]'>, []>>,\n\n  Expect<Equal<Parse<'[1]'>, never>>,\n\n  Expect<Equal<Parse<'true'>, true>>,\n\n  Expect<Equal<\n  Parse<'[\"Hello\", true, false, null]'>,\n  ['Hello', true, false, null]\n  >>,\n\n  Expect<Equal<\n  (\n    Parse<`\n      {\n        \"hello\\\\r\\\\n\\\\b\\\\f\": \"world\"\n      }`>\n  ), (\n    {\n      'hello\\r\\n\\b\\f': 'world'\n    }\n  )\n  >>,\n\n  Expect<Equal<Parse<'{ 1: \"world\" }'>, never>>,\n\n  Expect<Equal<Parse<`{ \"hello\n  \n  world\": 123 }`>, never>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/6228/answer/ja\n  > 解答を見る：https://tsch.js.org/6228/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}