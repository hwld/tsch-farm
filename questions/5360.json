{"id":5360,"title":"unique","difficulty":"medium","code":"/*\n  5360 - Unique\n  -------\n  by Pineapple (@Pineapple0919) #中級 #array\n\n  ### 質問\n\n  Implement the type version of Lodash.uniq, Unique<T> takes an Array T, returns the Array T without repeated values.\n\n  ```ts\n  type Res = Unique<[1, 1, 2, 2, 3, 3]>; // expected to be [1, 2, 3]\n  type Res1 = Unique<[1, 2, 3, 4, 4, 5, 6, 7]>; // expected to be [1, 2, 3, 4, 5, 6, 7]\n  type Res2 = Unique<[1, \"a\", 2, \"b\", 2, \"a\"]>; // expected to be [1, \"a\", 2, \"b\"]\n  type Res3 = Unique<[string, number, 1, \"a\", 1, string, 2, \"b\", 2, number]>; // expected to be [string, number, 1, \"a\", 2, \"b\"]\n  type Res4 = Unique<[unknown, unknown, any, any, never, never]>; // expected to be [unknown, any, never]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/5360/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Unique<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Unique<[1, 1, 2, 2, 3, 3]>, [1, 2, 3]>>,\n  Expect<Equal<Unique<[1, 2, 3, 4, 4, 5, 6, 7]>, [1, 2, 3, 4, 5, 6, 7]>>,\n  Expect<Equal<Unique<[1, 'a', 2, 'b', 2, 'a']>, [1, 'a', 2, 'b']>>,\n  Expect<Equal<Unique<[string, number, 1, 'a', 1, string, 2, 'b', 2, number]>, [string, number, 1, 'a', 2, 'b']>>,\n  Expect<Equal<Unique<[unknown, unknown, any, any, never, never]>, [unknown, any, never]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/5360/answer/ja\n  > 解答を見る：https://tsch.js.org/5360/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}