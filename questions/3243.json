{"id":3243,"difficulty":"medium","title":"flattendepth","code":"/*\n  3243 - FlattenDepth\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #array\n\n  ### 質問\n\n  Recursively flatten array up to depth times.\n\n  For example:\n\n  ```typescript\n  type a = FlattenDepth<[1, 2, [3, 4], [[[5]]]], 2> // [1, 2, 3, 4, [5]]. flattern 2 times\n  type b = FlattenDepth<[1, 2, [3, 4], [[[5]]]]> // [1, 2, 3, 4, [[5]]]. Depth defaults to be 1\n  ```\n\n  If the depth is provided, it's guaranteed to be positive integer.\n\n  > GitHubで確認する：https://tsch.js.org/3243/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype FlattenDepth = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<FlattenDepth<[]>, []>>,\n  Expect<Equal<FlattenDepth<[1, 2, 3, 4]>, [1, 2, 3, 4]>>,\n  Expect<Equal<FlattenDepth<[1, [2]]>, [1, 2]>>,\n  Expect<Equal<FlattenDepth<[1, 2, [3, 4], [[[5]]]], 2>, [1, 2, 3, 4, [5]]>>,\n  Expect<Equal<FlattenDepth<[1, 2, [3, 4], [[[5]]]]>, [1, 2, 3, 4, [[5]]]>>,\n  Expect<Equal<FlattenDepth<[1, [2, [3, [4, [5]]]]], 3>, [1, 2, 3, 4, [5]]>>,\n  Expect<Equal<FlattenDepth<[1, [2, [3, [4, [5]]]]], 19260817>, [1, 2, 3, 4, 5]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/3243/answer/ja\n  > 解答を見る：https://tsch.js.org/3243/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}