{"id":9142,"difficulty":"medium","title":"checkrepeatedchars","code":"/*\n  9142 - CheckRepeatedChars\n  -------\n  by Hong (@RThong) #中級 #union #string\n\n  ### 質問\n\n  Implement type ```CheckRepeatedChars<S>``` which will return whether type ```S``` contains duplicated chars?\n\n  For example:\n\n  ```ts\n  type CheckRepeatedChars<'abc'>   // false\n  type CheckRepeatedChars<'aba'>   // true\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/9142/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype CheckRepeatedChars<T extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\ntype cases = [\r\n  Expect<Equal<CheckRepeatedChars<'abc'>, false>>,\r\n  Expect<Equal<CheckRepeatedChars<'abb'>, true>>,\r\n  Expect<Equal<CheckRepeatedChars<'cbc'>, true>>,\r\n  Expect<Equal<CheckRepeatedChars<''>, false>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/9142/answer/ja\n  > 解答を見る：https://tsch.js.org/9142/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}