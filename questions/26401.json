{"id":26401,"title":"json-schema-to-typescript","difficulty":"medium","code":"/*\n  26401 - JSON Schema to TypeScript\n  -------\n  by null (@aswinsvijay) #中級 #JSON\n\n  ### 質問\n\n  Implement the generic type JSONSchema2TS which will return the TypeScript type corresponding to the given JSON schema.\n\n  Additional challenges to handle:\n  * additionalProperties\n  * oneOf, anyOf, allOf\n  * minLength and maxLength\n\n  > GitHubで確認する：https://tsch.js.org/26401/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype JSONSchema2TS<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\n// + Primitive types\r\ntype Type1 = JSONSchema2TS<{\r\n  type: 'string'\r\n}>\r\ntype Expected1 = string\r\ntype Result1 = Expect<Equal<Type1, Expected1>>\r\n\r\ntype Type2 = JSONSchema2TS<{\r\n  type: 'number'\r\n}>\r\ntype Expected2 = number\r\ntype Result2 = Expect<Equal<Type2, Expected2>>\r\n\r\ntype Type3 = JSONSchema2TS<{\r\n  type: 'boolean'\r\n}>\r\ntype Expected3 = boolean\r\ntype Result3 = Expect<Equal<Type3, Expected3>>\r\n// - Primitive types\r\n\r\n// + Enums\r\ntype Type4 = JSONSchema2TS<{\r\n  type: 'string'\r\n  enum: ['a', 'b', 'c']\r\n}>\r\ntype Expected4 = 'a' | 'b' | 'c'\r\ntype Result4 = Expect<Equal<Type4, Expected4>>\r\n\r\ntype Type5 = JSONSchema2TS<{\r\n  type: 'number'\r\n  enum: [1, 2, 3]\r\n}>\r\ntype Expected5 = 1 | 2 | 3\r\ntype Result5 = Expect<Equal<Type5, Expected5>>\r\n// - Enums\r\n\r\n// + Object types\r\ntype Type6 = JSONSchema2TS<{\r\n  type: 'object'\r\n}>\r\ntype Expected6 = Record<string, unknown>\r\ntype Result6 = Expect<Equal<Type6, Expected6>>\r\n\r\ntype Type7 = JSONSchema2TS<{\r\n  type: 'object'\r\n  properties: {}\r\n}>\r\ntype Expected7 = {}\r\ntype Result7 = Expect<Equal<Type7, Expected7>>\r\n\r\ntype Type8 = JSONSchema2TS<{\r\n  type: 'object'\r\n  properties: {\r\n    a: {\r\n      type: 'string'\r\n    }\r\n  }\r\n}>\r\ntype Expected8 = {\r\n  a?: string\r\n}\r\ntype Result8 = Expect<Equal<Type8, Expected8>>\r\n// - Object types\r\n\r\n// + Arrays\r\ntype Type9 = JSONSchema2TS<{\r\n  type: 'array'\r\n}>\r\ntype Expected9 = unknown[]\r\ntype Result9 = Expect<Equal<Type9, Expected9>>\r\n\r\ntype Type10 = JSONSchema2TS<{\r\n  type: 'array'\r\n  items: {\r\n    type: 'string'\r\n  }\r\n}>\r\ntype Expected10 = string[]\r\ntype Result10 = Expect<Equal<Type10, Expected10>>\r\n\r\ntype Type11 = JSONSchema2TS<{\r\n  type: 'array'\r\n  items: {\r\n    type: 'object'\r\n  }\r\n}>\r\ntype Expected11 = Record<string, unknown>[]\r\ntype Result11 = Expect<Equal<Type11, Expected11>>\r\n// - Arrays\r\n\r\n// + Mixed types\r\ntype Type12 = JSONSchema2TS<{\r\n  type: 'object'\r\n  properties: {\r\n    a: {\r\n      type: 'string'\r\n      enum: ['a', 'b', 'c']\r\n    }\r\n    b: {\r\n      type: 'number'\r\n    }\r\n  }\r\n}>\r\ntype Expected12 = {\r\n  a?: 'a' | 'b' | 'c'\r\n  b?: number\r\n}\r\ntype Result12 = Expect<Equal<Type12, Expected12>>\r\n\r\ntype Type13 = JSONSchema2TS<{\r\n  type: 'array'\r\n  items: {\r\n    type: 'object'\r\n    properties: {\r\n      a: {\r\n        type: 'string'\r\n      }\r\n    }\r\n  }\r\n}>\r\ntype Expected13 = {\r\n  a?: string\r\n}[]\r\ntype Result13 = Expect<Equal<Type13, Expected13>>\r\n// - Mixed types\r\n\r\n// + Required fields\r\ntype Type14 = JSONSchema2TS<{\r\n  type: 'object'\r\n  properties: {\r\n    req1: { type: 'string' }\r\n    req2: {\r\n      type: 'object'\r\n      properties: {\r\n        a: {\r\n          type: 'number'\r\n        }\r\n      }\r\n      required: ['a']\r\n    }\r\n    add1: { type: 'string' }\r\n    add2: {\r\n      type: 'array'\r\n      items: {\r\n        type: 'number'\r\n      }\r\n    }\r\n  }\r\n  required: ['req1', 'req2']\r\n}>\r\ntype Expected14 = {\r\n  req1: string\r\n  req2: { a: number }\r\n  add1?: string\r\n  add2?: number[]\r\n}\r\ntype Result14 = Expect<Equal<Type14, Expected14>>\r\n// - Required fields\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/26401/answer/ja\n  > 解答を見る：https://tsch.js.org/26401/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}