{"id":34286,"title":"take-elements","difficulty":"hard","code":"/*\n  34286 - Take Elements\n  -------\n  by Eirik Måseidvåg (@Eirmas) #上級 #array\n\n  ### 質問\n\n  Implement a type `Take<N, Arr>` that returns the first `N` elements from an array `Arr`. If `N` is negative, return the last `|N|` elements\n\n  For example,\n  ```ts\n  type T0 = Take<2, [1, 2, 3]> // [1, 2]\n  type T1 = Take<3, ['1', 2, true, false]> // ['1', 2, true]\n  type T2 = Take<-2, [1, 2, 3]> // [2, 3]\n  type T3 = Take<0, [1, 2, 3]> // []\n  type T4 = Take<5, [1, 2, 3]> // [1, 2, 3]\n  type T5 = Take<3, []> // []\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/34286/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Take<N, Arr> = Arr\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<Take<2, [1, 2, 3]>, [1, 2]>>,\r\n  Expect<Equal<Take<3, ['1', 2, true, false]>, ['1', 2, true]>>,\r\n  Expect<Equal<Take<-2, [1, 2, 3]>, [2, 3]>>,\r\n  Expect<Equal<Take<0, [1, 2, 3]>, []>>,\r\n  Expect<Equal<Take<5, [1, 2, 3]>, [1, 2, 3]>>,\r\n  Expect<Equal<Take<3, []>, []>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/34286/answer/ja\n  > 解答を見る：https://tsch.js.org/34286/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}