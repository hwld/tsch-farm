{"id":216,"title":"slice","difficulty":"extreme","code":"/*\n  216 - Slice\n  -------\n  by Anthony Fu (@antfu) #最上級 #array\n\n  ### 質問\n\n  Implement the JavaScript `Array.slice` function in the type system. `Slice<Arr, Start, End>` takes the three argument. The output should be a subarray of `Arr` from index `Start` to `End`. Indexes with negative numbers should be counted from reversely.\n\n  For example\n\n  ```ts\n  type Arr = [1, 2, 3, 4, 5]\n  type Result = Slice<Arr, 2, 4> // expected to be [3, 4]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/216/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Slice<Arr, Start, End> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype Arr = [1, 2, 3, 4, 5]\n\ntype cases = [\n  // basic\n  Expect<Equal<Slice<Arr, 0, 1>, [1]>>,\n  Expect<Equal<Slice<Arr, 0, 0>, []>>,\n  Expect<Equal<Slice<Arr, 2, 4>, [3, 4]>>,\n\n  // optional args\n  Expect<Equal<Slice<[]>, []>>,\n  Expect<Equal<Slice<Arr>, Arr>>,\n  Expect<Equal<Slice<Arr, 0>, Arr>>,\n  Expect<Equal<Slice<Arr, 2>, [3, 4, 5]>>,\n\n  // negative index\n  Expect<Equal<Slice<Arr, 0, -1>, [1, 2, 3, 4]>>,\n  Expect<Equal<Slice<Arr, -3, -1>, [3, 4]>>,\n\n  // invalid\n  Expect<Equal<Slice<Arr, 10>, []>>,\n  Expect<Equal<Slice<Arr, 1, 0>, []>>,\n  Expect<Equal<Slice<Arr, 10, 20>, []>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/216/answer/ja\n  > 解答を見る：https://tsch.js.org/216/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}