{"id":459,"difficulty":"medium","title":"flatten","code":"/*\n  459 - Flatten\n  -------\n  by zhouyiming (@chbro) #中級 #array\n\n  ### 質問\n\n  この課題では、受け取った配列をフラット化した型を出力する型を書く必要があります。\n\n  例えば:\n\n  ```ts\n  type flatten = Flatten<[1, 2, [3, 4], [[[5]]]> // [1, 2, 3, 4, 5]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/459/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Flatten = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Flatten<[]>, []>>,\n  Expect<Equal<Flatten<[1, 2, 3, 4]>, [1, 2, 3, 4]>>,\n  Expect<Equal<Flatten<[1, [2]]>, [1, 2]>>,\n  Expect<Equal<Flatten<[1, 2, [3, 4], [[[5]]]]>, [1, 2, 3, 4, 5]>>,\n  Expect<Equal<Flatten<[{ foo: 'bar', 2: 10 }, 'foobar']>, [{ foo: 'bar', 2: 10 }, 'foobar']>>,\n]\n\n// @ts-expect-error\ntype error = Flatten<'1'>\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/459/answer/ja\n  > 解答を見る：https://tsch.js.org/459/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}