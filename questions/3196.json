{"id":3196,"title":"flip-arguments","difficulty":"medium","code":"/*\n  3196 - Flip Arguments\n  -------\n  by jiangshan (@jiangshanmeta) #中級 #arguments\n\n  ### 質問\n\n  Implement the type version of lodash's ```_.flip```.\n\n  Type ```FlipArguments<T>``` requires function type ```T``` and returns a new function type which has the same return type of T but reversed parameters.\n\n  For example:\n\n  ```typescript\n  type Flipped = FlipArguments<(arg0: string, arg1: number, arg2: boolean) => void>\n  // (arg0: boolean, arg1: number, arg2: string) => void\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/3196/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype FlipArguments<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<FlipArguments<() => boolean>, () => boolean>>,\n  Expect<Equal<FlipArguments<(foo: string) => number>, (foo: string) => number>>,\n  Expect<Equal<FlipArguments<(arg0: string, arg1: number, arg2: boolean) => void>, (arg0: boolean, arg1: number, arg2: string) => void>>,\n]\n\ntype errors = [\n  // @ts-expect-error\n  FlipArguments<'string'>,\n  // @ts-expect-error\n  FlipArguments<{ key: 'value' }>,\n  // @ts-expect-error\n  FlipArguments<['apple', 'banana', 100, { a: 1 }]>,\n  // @ts-expect-error\n  FlipArguments<null | undefined>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/3196/answer/ja\n  > 解答を見る：https://tsch.js.org/3196/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}