{"id":32532,"title":"binary-addition","difficulty":"hard","code":"/*\n  32532 - Binary Addition\n  -------\n  by Finley Garton (@finleygn) #上級 #recursion #array\n\n  ### 質問\n\n  Implement `BinaryAdd` to add two binary numbers together. The numbers should not be translated out of binary at any point.\n\n  Note the two inputs will always have the same length.\n\n  > GitHubで確認する：https://tsch.js.org/32532/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Bit = 1 | 0\r\n\r\ntype BinaryAdd<A extends Bit[], B extends Bit[]> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<\r\n    BinaryAdd<[1], [1]>,\r\n    [1, 0]\r\n  >>,\r\n  Expect<Equal<\r\n    BinaryAdd<[0], [1]>,\r\n    [1]\r\n  >>,\r\n  Expect<Equal<\r\n    BinaryAdd<[1, 1, 0], [0, 0, 1]>,\r\n    [1, 1, 1]\r\n  >>,\r\n  Expect<Equal<\r\n    BinaryAdd<[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]>,\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]\r\n  >>,\r\n  Expect<Equal<\r\n    BinaryAdd<[1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0]>,\r\n    [1, 0, 0, 1, 1, 1, 0, 1, 0]\r\n  >>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/32532/answer/ja\n  > 解答を見る：https://tsch.js.org/32532/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}