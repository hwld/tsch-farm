{"id":16,"difficulty":"medium","title":"pop","code":"/*\n  16 - Pop\n  -------\n  by Anthony Fu (@antfu) #中級 #array\n\n  ### 質問\n\n  > この課題ではTypeScript 4.0が推奨されます\n\n  配列 `T` を受け取り、最後の要素を除いた配列を返す汎用的な `Pop<T>` を実装してください。\n\n  例えば\n\n  ```ts\n  type arr1 = ['a', 'b', 'c', 'd']\n  type arr2 = [3, 2, 1]\n\n  type re1 = Pop<arr1> // expected to be ['a', 'b', 'c']\n  type re2 = Pop<arr2> // expected to be [3, 2]\n  ```\n\n  **おまけ**: 同様に `Shift`、 `Push`、 `Unshift` も実装できますか？\n\n  > GitHubで確認する：https://tsch.js.org/16/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Pop<T extends any[]> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Pop<[3, 2, 1]>, [3, 2]>>,\n  Expect<Equal<Pop<['a', 'b', 'c', 'd']>, ['a', 'b', 'c']>>,\n  Expect<Equal<Pop<[]>, []>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/16/answer/ja\n  > 解答を見る：https://tsch.js.org/16/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}