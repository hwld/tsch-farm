{"id":612,"difficulty":"medium","title":"kebabcase","code":"/*\n  612 - KebabCase\n  -------\n  by Johnson Chu (@johnsoncodehk) #中級 #template-literal\n\n  ### 質問\n\n  キャメルケースもしくはパスカルケースの文字列を、ケバブケースに置換する型を実装します。\n\n  `FooBarBaz` -> `foo-bar-baz`\n\n  例えば\n\n  ```ts\n  type FooBarBaz = KebabCase<\"FooBarBaz\">;\n  const foobarbaz: FooBarBaz = \"foo-bar-baz\";\n\n  type DoNothing = KebabCase<\"do-nothing\">;\n  const doNothing: DoNothing = \"do-nothing\";\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/612/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype KebabCase<S> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<KebabCase<'FooBarBaz'>, 'foo-bar-baz'>>,\n  Expect<Equal<KebabCase<'fooBarBaz'>, 'foo-bar-baz'>>,\n  Expect<Equal<KebabCase<'foo-bar'>, 'foo-bar'>>,\n  Expect<Equal<KebabCase<'foo_bar'>, 'foo_bar'>>,\n  Expect<Equal<KebabCase<'Foo-Bar'>, 'foo--bar'>>,\n  Expect<Equal<KebabCase<'ABC'>, 'a-b-c'>>,\n  Expect<Equal<KebabCase<'-'>, '-'>>,\n  Expect<Equal<KebabCase<''>, ''>>,\n  Expect<Equal<KebabCase<'😎'>, '😎'>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/612/answer/ja\n  > 解答を見る：https://tsch.js.org/612/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}