{"id":3,"title":"omit","difficulty":"medium","code":"/*\n  3 - Omit\n  -------\n  by Anthony Fu (@antfu) #中級 #union #built-in\n\n  ### 質問\n\n  組み込みの型ユーティリティ`Omit<T, K>`を使用せず、`T`のプロパティから`K`を削除する型を実装します。\n\n  例えば\n\n  ```ts\n  interface Todo {\n    title: string\n    description: string\n    completed: boolean\n  }\n\n  type TodoPreview = MyOmit<Todo, 'description' | 'title'>\n\n  const todo: TodoPreview = {\n    completed: false,\n  }\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/3/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype MyOmit<T, K> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Expected1, MyOmit<Todo, 'description'>>>,\n  Expect<Equal<Expected2, MyOmit<Todo, 'description' | 'completed'>>>,\n  Expect<Equal<Expected3, MyOmit<Todo1, 'description' | 'completed'>>>,\n]\n\n// @ts-expect-error\ntype error = MyOmit<Todo, 'description' | 'invalid'>\n\ninterface Todo {\n  title: string\n  description: string\n  completed: boolean\n}\n\ninterface Todo1 {\n  readonly title: string\n  description: string\n  completed: boolean\n}\n\ninterface Expected1 {\n  title: string\n  completed: boolean\n}\n\ninterface Expected2 {\n  title: string\n}\n\ninterface Expected3 {\n  readonly title: string\n}\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/3/answer/ja\n  > 解答を見る：https://tsch.js.org/3/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}