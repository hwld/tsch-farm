{"id":399,"title":"tuple-filter","difficulty":"hard","code":"/*\n  399 - Tuple Filter\n  -------\n  by Ryo Hanafusa (@softoika) #上級 #tuple #infer\n\n  ### 質問\n\n  タプル`T`から指定された型`F`をフィルタリングする`FilterOut<T, F>`を実装します。\n\n  例えば、\n\n  ```ts\n  type Filtered = FilterOut<[1, 2, null, 3], null>; // [1, 2, 3]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/399/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype FilterOut<T extends any[], F> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<FilterOut<[], never>, []>>,\n  Expect<Equal<FilterOut<[never], never>, []>>,\n  Expect<Equal<FilterOut<['a', never], never>, ['a']>>,\n  Expect<Equal<FilterOut<[1, never, 'a'], never>, [1, 'a']>>,\n  Expect<Equal<FilterOut<[never, 1, 'a', undefined, false, null], never | null | undefined>, [1, 'a', false]>>,\n  Expect<Equal<FilterOut<[number | null | undefined, never], never | null | undefined>, [number | null | undefined]>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/399/answer/ja\n  > 解答を見る：https://tsch.js.org/399/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}