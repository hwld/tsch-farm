{"id":5,"title":"readonly-keys","difficulty":"extreme","code":"/*\n  5 - Get Readonly Keys\n  -------\n  by Anthony Fu (@antfu) #最上級 #utils #object-keys\n\n  ### 質問\n\n  オブジェクトの読み取り専用キーの Union を返す汎用的な `GetReadonlyKeys<T>` を実装してください。\n\n  例えば\n\n  ```ts\n  interface Todo {\n    readonly title: string\n    readonly description: string\n    completed: boolean\n  }\n\n  type Keys = GetReadonlyKeys<Todo> // expected to be \"title\" | \"description\"\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/5/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype GetReadonlyKeys<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<'title', GetReadonlyKeys<Todo1>>>,\n  Expect<Equal<'title' | 'description', GetReadonlyKeys<Todo2>>>,\n]\n\ninterface Todo1 {\n  readonly title: string\n  description: string\n  completed: boolean\n}\n\ninterface Todo2 {\n  readonly title: string\n  readonly description: string\n  completed?: boolean\n}\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/5/answer/ja\n  > 解答を見る：https://tsch.js.org/5/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}