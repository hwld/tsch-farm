{"id":14080,"title":"fizzbuzz","difficulty":"hard","code":"/*\n  14080 - FizzBuzz\n  -------\n  by Lee Crosby (@Cygnut) #上級 #array #math #infer\n\n  ### 質問\n\n  The FizzBuzz problem is a classic test given in coding interviews. The task is simple:\n\n  Print integers 1 to N, except:\n\n  - Print \"Fizz\" if an integer is divisible by 3;\n  - Print \"Buzz\" if an integer is divisible by 5;\n  - Print \"FizzBuzz\" if an integer is divisible by both 3 and 5.\n\n  For example, for N = 20, the output should be:\n  `1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz, 16, 17, Fizz, 19, Buzz`\n\n  In the challenge below, we will want to generate this as an array of string literals.\n\n  For large values of N, you will need to ensure that any types generated do so efficiently (e.g. by\n  correctly using the tail-call optimisation for recursion).\n\n  > GitHubで確認する：https://tsch.js.org/14080/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype FizzBuzz<N extends number> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<FizzBuzz<1>, ['1']>>,\r\n  Expect<Equal<FizzBuzz<5>, ['1', '2', 'Fizz', '4', 'Buzz']>>,\r\n  Expect<Equal<FizzBuzz<20>, [\r\n    '1',\r\n    '2',\r\n    'Fizz',\r\n    '4',\r\n    'Buzz',\r\n    'Fizz',\r\n    '7',\r\n    '8',\r\n    'Fizz',\r\n    'Buzz',\r\n    '11',\r\n    'Fizz',\r\n    '13',\r\n    '14',\r\n    'FizzBuzz',\r\n    '16',\r\n    '17',\r\n    'Fizz',\r\n    '19',\r\n    'Buzz',\r\n  ]>>,\r\n  Expect<Equal<FizzBuzz<100>, [\r\n    '1',\r\n    '2',\r\n    'Fizz',\r\n    '4',\r\n    'Buzz',\r\n    'Fizz',\r\n    '7',\r\n    '8',\r\n    'Fizz',\r\n    'Buzz',\r\n    '11',\r\n    'Fizz',\r\n    '13',\r\n    '14',\r\n    'FizzBuzz',\r\n    '16',\r\n    '17',\r\n    'Fizz',\r\n    '19',\r\n    'Buzz',\r\n    'Fizz',\r\n    '22',\r\n    '23',\r\n    'Fizz',\r\n    'Buzz',\r\n    '26',\r\n    'Fizz',\r\n    '28',\r\n    '29',\r\n    'FizzBuzz',\r\n    '31',\r\n    '32',\r\n    'Fizz',\r\n    '34',\r\n    'Buzz',\r\n    'Fizz',\r\n    '37',\r\n    '38',\r\n    'Fizz',\r\n    'Buzz',\r\n    '41',\r\n    'Fizz',\r\n    '43',\r\n    '44',\r\n    'FizzBuzz',\r\n    '46',\r\n    '47',\r\n    'Fizz',\r\n    '49',\r\n    'Buzz',\r\n    'Fizz',\r\n    '52',\r\n    '53',\r\n    'Fizz',\r\n    'Buzz',\r\n    '56',\r\n    'Fizz',\r\n    '58',\r\n    '59',\r\n    'FizzBuzz',\r\n    '61',\r\n    '62',\r\n    'Fizz',\r\n    '64',\r\n    'Buzz',\r\n    'Fizz',\r\n    '67',\r\n    '68',\r\n    'Fizz',\r\n    'Buzz',\r\n    '71',\r\n    'Fizz',\r\n    '73',\r\n    '74',\r\n    'FizzBuzz',\r\n    '76',\r\n    '77',\r\n    'Fizz',\r\n    '79',\r\n    'Buzz',\r\n    'Fizz',\r\n    '82',\r\n    '83',\r\n    'Fizz',\r\n    'Buzz',\r\n    '86',\r\n    'Fizz',\r\n    '88',\r\n    '89',\r\n    'FizzBuzz',\r\n    '91',\r\n    '92',\r\n    'Fizz',\r\n    '94',\r\n    'Buzz',\r\n    'Fizz',\r\n    '97',\r\n    '98',\r\n    'Fizz',\r\n    'Buzz',\r\n  ]>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/14080/answer/ja\n  > 解答を見る：https://tsch.js.org/14080/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}