{"id":191,"title":"append-argument","difficulty":"medium","code":"/*\n  191 - Append Argument\n  -------\n  by Maciej Sikora (@maciejsikora) #中級 #arguments\n\n  ### 質問\n\n  与えられた関数型 `Fn` と任意の型 `A` に対して、第一引数に `Fn` を取り、第二引数に `A` を取り、`Fn` の引数に `A` を追加した関数型 `G` を生成します。\n\n  例えば、\n\n  ```typescript\n  type Fn = (a: number, b: string) => number\n\n  type Result = AppendArgument<Fn, boolean>\n  // expected be (a: number, b: string, x: boolean) => number\n  ```\n\n  > この質問は、[@maciejsikora](https://github.com/maciejsikora) による[元の記事](https://dev.to/macsikora/advanced-typescript-exercises-question-4-495c)から移植されました。\n\n  > GitHubで確認する：https://tsch.js.org/191/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype AppendArgument<Fn, A> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype Case1 = AppendArgument<(a: number, b: string) => number, boolean>\ntype Result1 = (a: number, b: string, x: boolean) => number\n\ntype Case2 = AppendArgument<() => void, undefined>\ntype Result2 = (x: undefined) => void\n\ntype cases = [\n  Expect<Equal<Case1, Result1>>,\n  Expect<Equal<Case2, Result2>>,\n  // @ts-expect-error\n  AppendArgument<unknown, undefined>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/191/answer/ja\n  > 解答を見る：https://tsch.js.org/191/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}