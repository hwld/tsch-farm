{"id":189,"title":"awaited","difficulty":"easy","code":"/*\n  189 - Awaited\n  -------\n  by Maciej Sikora (@maciejsikora) #初級 #promise #built-in\n\n  ### 質問\n\n  Promise ライクな型が内包する型をどのように取得すればよいでしょうか。\n\n  例えば：`Promise<ExampleType>`という型がある場合、どのようにして ExampleType を取得すればよいでしょうか。\n\n  ```ts\n  type ExampleType = Promise<string>\n\n  type Result = MyAwaited<ExampleType> // string\n  ```\n\n  > この問題の元記事は [original article](https://dev.to/macsikora/advanced-typescript-exercises-question-1-45k4) by [@maciejsikora](https://github.com/maciejsikora) です。\n\n  > GitHubで確認する：https://tsch.js.org/189/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype MyAwaited<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype X = Promise<string>\ntype Y = Promise<{ field: number }>\ntype Z = Promise<Promise<string | number>>\ntype Z1 = Promise<Promise<Promise<string | boolean>>>\ntype T = { then: (onfulfilled: (arg: number) => any) => any }\n\ntype cases = [\n  Expect<Equal<MyAwaited<X>, string>>,\n  Expect<Equal<MyAwaited<Y>, { field: number }>>,\n  Expect<Equal<MyAwaited<Z>, string | number>>,\n  Expect<Equal<MyAwaited<Z1>, string | boolean>>,\n  Expect<Equal<MyAwaited<T>, number>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/189/answer/ja\n  > 解答を見る：https://tsch.js.org/189/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}