{"id":4803,"title":"trim-right","difficulty":"medium","code":"/*\n  4803 - Trim Right\n  -------\n  by Yugang Cao (@Talljack) #中級 #template-literal\n\n  ### 質問\n\n  Implement `TrimRight<T>` which takes an exact string type and returns a new string with the whitespace ending removed.\n\n  For example:\n\n  ```ts\n  type Trimed = TrimRight<'   Hello World    '> // expected to be '   Hello World'\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/4803/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype TrimRight<S extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<TrimRight<'str'>, 'str'>>,\n  Expect<Equal<TrimRight<'str '>, 'str'>>,\n  Expect<Equal<TrimRight<'str     '>, 'str'>>,\n  Expect<Equal<TrimRight<'     str     '>, '     str'>>,\n  Expect<Equal<TrimRight<'   foo bar  \\n\\t '>, '   foo bar'>>,\n  Expect<Equal<TrimRight<''>, ''>>,\n  Expect<Equal<TrimRight<'\\n\\t '>, ''>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/4803/answer/ja\n  > 解答を見る：https://tsch.js.org/4803/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}