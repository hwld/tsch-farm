{"id":27932,"title":"mergeall","difficulty":"medium","code":"/*\n  27932 - MergeAll\n  -------\n  by scarf (@scarf005) #中級 #object #array #union\n\n  ### 質問\n\n  Merge variadic number of types into a new type. If the keys overlap, its values should be merged into an union.\n\n  For example:\n\n  ```ts\n  type Foo = { a: 1; b: 2 }\n  type Bar = { a: 2 }\n  type Baz = { c: 3 }\n\n  type Result = MergeAll<[Foo, Bar, Baz]> // expected to be { a: 1 | 2; b: 2; c: 3 }\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/27932/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype MergeAll<XS> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<MergeAll<[]>, {} >>,\r\n  Expect<Equal<MergeAll<[{ a: 1 }]>, { a: 1 }>>,\r\n  Expect<Equal<\r\n    MergeAll<[{ a: string }, { a: string }]>,\r\n    { a: string }\n>\r\n  >,\r\n  Expect<Equal<\r\n    MergeAll<[{ }, { a: string }]>,\r\n    { a: string }\n>\r\n  >,\r\n  Expect<Equal<\r\n    MergeAll<[{ a: 1 }, { c: 2 }]>,\r\n    { a: 1, c: 2 }\n>\r\n  >,\r\n  Expect<Equal<\r\n    MergeAll<[{ a: 1, b: 2 }, { a: 2 }, { c: 3 }]>,\r\n    { a: 1 | 2, b: 2, c: 3 }\n>\r\n  >,\r\n  Expect<Equal<MergeAll<[{ a: 1 }, { a: number }]>, { a: number }>>,\r\n  Expect<Equal<MergeAll<[{ a: number }, { a: 1 }]>, { a: number }>>,\r\n  Expect<Equal<MergeAll<[{ a: 1 | 2 }, { a: 1 | 3 }]>, { a: 1 | 2 | 3 }>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/27932/answer/ja\n  > 解答を見る：https://tsch.js.org/27932/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}