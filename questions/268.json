{"id":268,"title":"if","difficulty":"easy","code":"/*\n  268 - If\n  -------\n  by Pavel Glushkov (@pashutk) #初級 #utils\n\n  ### 質問\n\n  条件値`C`、 `C`が truthy である場合の戻り値の型`T`、`C`が falsy である場合の戻り値の型`F`を受け取る`If`を実装します。\n  条件値`C` は`true`か`false`のどちらかであることが期待されますが、`T` と `F` は任意の型をとることができます。\n\n  例えば：\n\n  ```ts\n  type A = If<true, 'a', 'b'>; // expected to be 'a'\n  type B = If<false, 'a', 'b'>; // expected to be 'b'\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/268/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype If<C, T, F> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<If<true, 'a', 'b'>, 'a'>>,\n  Expect<Equal<If<false, 'a', 2>, 2>>,\n  Expect<Equal<If<boolean, 'a', 2>, 'a' | 2>>,\n]\n\n// @ts-expect-error\ntype error = If<null, 'a', 'b'>\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/268/answer/ja\n  > 解答を見る：https://tsch.js.org/268/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}