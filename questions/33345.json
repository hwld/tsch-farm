{"id":33345,"difficulty":"extreme","title":"dynamic-route","code":"/*\n  33345 - Dynamic Route\n  -------\n  by 0753 (@0753Ljuc) #最上級\n\n  ### 質問\n\n  Given below routes, infer its dynamic params.\n  | Route                          | Params Type Definition                                                                                     |\n  |--------------------------------|------------------------------------------------------------------------------------------------------------|\n  | `/blog/[slug]/page.js`         | `{ slug: string }`                                                                                         |\n  | `/shop/[...slug]/page.js`      | `{ slug: string[] }`                                                                                       |\n  | `/shop/[[...slug]]/page.js`    | `{ slug?: string[] }`                                                                                      |\n  | `/[categoryId]/[itemId]/page.js` | `{ categoryId: string, itemId: string }`                                                                 |\n  | `/app/[...foo]/[...bar]`       | `never` - It's ambiguous as we cannot decide if `b` on `/app/a/b/c` is belongs to `foo` or `bar`.          |\n  | `/[[...foo]]/[slug]/[...bar]`  | `never`                                                                                                    |\n  | `/[first]/[[...foo]]/stub/[...bar]/[last]` | `{ first: string, foo?: string[], bar: string[], last: string }`                               |\n\n  > GitHubで確認する：https://tsch.js.org/33345/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype DynamicRoute<T extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\ntype cases = [\r\n  Expect<Equal<DynamicRoute<'/shop'>, {}>>,\r\n  Expect<Equal<DynamicRoute<'/shop/[]'>, {}>>,\r\n  Expect<Equal<DynamicRoute<'/shop/[slug]'>, { slug: string }>>,\r\n  Expect<Equal<DynamicRoute<'/shop/[slug]/'>, { slug: string }>>,\r\n  Expect<\r\n    Equal<DynamicRoute<'/shop/[slug]/[foo]'>, { slug: string, foo: string }>\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[foo]'>,\r\n      { slug: string, foo: string }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[foo]'>,\r\n      { slug: string, foo: string }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[...foo]'>,\r\n      { slug: string, foo: string[] }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[[...foo]]'>,\r\n      { slug: string, foo?: string[] }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[[...foo]]/[]'>,\r\n      { slug: string, foo?: string[] }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[[...foo]]/[...]'>,\r\n      { slug: string, foo?: string[], '...': string }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[[...foo]]/[...]/[]index.html'>,\r\n      { slug: string, foo?: string[], '...': string }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'/shop/[slug]/stub/[[...foo]]/[...]/[...]index.html'>,\r\n      { slug: string, foo?: string[], '...': string }\r\n    >\r\n  >,\r\n  Expect<Equal<DynamicRoute<'/[slug]/[[...foo]]/[...bar]'>, never>>,\r\n  Expect<Equal<DynamicRoute<'/[[...foo]]/[slug]/[...bar]'>, never>>,\r\n  Expect<Equal<DynamicRoute<'/[[...foo]]/[...bar]/static'>, never>>,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'[[...foo]]/stub/[...bar]'>,\r\n      { foo?: string[], bar: string[] }\r\n    >\r\n  >,\r\n  Expect<\r\n    Equal<\r\n      DynamicRoute<'[first]/[[...foo]]/stub/[...bar]/[last]'>,\r\n      { first: string, foo?: string[], bar: string[], last: string }\r\n    >\r\n  >,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/33345/answer/ja\n  > 解答を見る：https://tsch.js.org/33345/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}