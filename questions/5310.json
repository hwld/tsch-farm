{"id":5310,"difficulty":"medium","title":"join","code":"/*\n  5310 - Join\n  -------\n  by Pineapple (@Pineapple0919) #中級 #array\n\n  ### 質問\n\n  Implement the type version of Array.join, Join<T, U> takes an Array T, string or number U and returns the Array T with U stitching up.\n\n  ```ts\n  type Res = Join<[\"a\", \"p\", \"p\", \"l\", \"e\"], \"-\">; // expected to be 'a-p-p-l-e'\n  type Res1 = Join<[\"Hello\", \"World\"], \" \">; // expected to be 'Hello World'\n  type Res2 = Join<[\"2\", \"2\", \"2\"], 1>; // expected to be '21212'\n  type Res3 = Join<[\"o\"], \"u\">; // expected to be 'o'\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/5310/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Join<T, U> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Join<['a', 'p', 'p', 'l', 'e'], '-'>, 'a-p-p-l-e'>>,\n  Expect<Equal<Join<['Hello', 'World'], ' '>, 'Hello World'>>,\n  Expect<Equal<Join<['2', '2', '2'], 1>, '21212'>>,\n  Expect<Equal<Join<['o'], 'u'>, 'o'>>,\n  Expect<Equal<Join<[], 'u'>, ''>>,\n  Expect<Equal<Join<['1', '1', '1']>, '1,1,1'>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/5310/answer/ja\n  > 解答を見る：https://tsch.js.org/5310/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}