{"id":476,"title":"sum","difficulty":"extreme","code":"/*\n  476 - Sum\n  -------\n  by null (@uid11) #最上級 #math #template-literal\n\n  ### 質問\n\n  Implement a type `Sum<A, B>` that summing two non-negative integers and returns the sum as a string. Numbers can be specified as a string, number, or bigint.\n\n  For example,\n\n  ```ts\n  type T0 = Sum<2, 3> // '5'\n  type T1 = Sum<'13', '21'> // '34'\n  type T2 = Sum<'328', 7> // '335'\n  type T3 = Sum<1_000_000_000_000n, '123'> // '1000000000123'\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/476/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Sum<A extends string | number | bigint, B extends string | number | bigint> = string\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Sum<2, 3>, '5'>>,\n  Expect<Equal<Sum<'13', '21'>, '34'>>,\n  Expect<Equal<Sum<'328', 7>, '335'>>,\n  Expect<Equal<Sum<1_000_000_000_000n, '123'>, '1000000000123'>>,\n  Expect<Equal<Sum<9999, 1>, '10000'>>,\n  Expect<Equal<Sum<4325234, '39532'>, '4364766'>>,\n  Expect<Equal<Sum<728, 0>, '728'>>,\n  Expect<Equal<Sum<'0', 213>, '213'>>,\n  Expect<Equal<Sum<0, '0'>, '0'>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/476/answer/ja\n  > 解答を見る：https://tsch.js.org/476/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}