{"id":31797,"difficulty":"hard","title":"sudoku","code":"/*\n  31797 - Sudoku\n  -------\n  by Bruno Ladeia (@BrunoLad) #上級 #union #array #tuple #game\n\n  ### 質問\n\n  Write a type that verifies [Sudoku](https://en.wikipedia.org/wiki/Sudoku) game is solved. This is based off a [challenge](https://typehero.dev/challenge/day-22) from Advent of Typescript 2023 by TypeHero (Day 22). So kudos for them for thinking up such a neat challenge!\n\n  > GitHubで確認する：https://tsch.js.org/31797/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype Digits = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\r\ntype SudokuSolved = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype test_sudoku_1_actual = SudokuSolved<[\r\n  [[1, 2, 3], [5, 6, 7], [4, 8, 9]],\r\n  [[4, 8, 9], [1, 2, 3], [5, 6, 7]],\r\n  [[5, 6, 7], [4, 8, 9], [1, 2, 3]],\r\n  [[3, 1, 2], [8, 5, 6], [9, 7, 4]],\r\n  [[7, 9, 4], [3, 1, 2], [8, 5, 6]],\r\n  [[8, 5, 6], [7, 9, 4], [3, 1, 2]],\r\n  [[2, 3, 1], [6, 4, 5], [7, 9, 8]],\r\n  [[9, 7, 8], [2, 3, 1], [6, 4, 5]],\r\n  [[6, 4, 5], [9, 7, 8], [2, 3, 1]],\r\n]>\r\n\r\ntype test_sudoku_2_actual = SudokuSolved<[\r\n  [[7, 1, 5], [4, 3, 8], [6, 9, 2]],\r\n  [[4, 8, 6], [9, 2, 5], [7, 1, 3]],\r\n  [[9, 3, 2], [1, 6, 7], [4, 8, 5]],\r\n  [[6, 5, 7], [2, 8, 9], [1, 3, 4]],\r\n  [[3, 2, 8], [7, 4, 1], [9, 5, 6]],\r\n  [[1, 4, 9], [3, 5, 6], [8, 2, 7]],\r\n  [[5, 9, 1], [6, 7, 3], [2, 4, 8]],\r\n  [[2, 6, 3], [8, 9, 4], [5, 7, 1]],\r\n  [[8, 7, 4], [5, 1, 2], [3, 6, 9]],\r\n]>\r\n\r\ntype test_sudoku_3_actual = SudokuSolved<[\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[4, 8, 1], [6, 2, 9], [5, 7, 3]],\r\n  [[5, 7, 6], [8, 4, 3], [2, 9, 1]],\r\n  [[7, 2, 9], [3, 1, 8], [4, 5, 6]],\r\n  [[6, 5, 8], [2, 7, 4], [3, 1, 9]],\r\n  [[1, 4, 3], [5, 9, 6], [7, 2, 8]],\r\n  [[2, 1, 4], [9, 3, 5], [6, 8, 7]],\r\n  [[9, 6, 5], [4, 8, 7], [1, 3, 2]],\r\n  [[8, 3, 7], [1, 6, 2], [9, 4, 5]],\r\n]>\r\n\r\ntype test_sudoku_4_actual = SudokuSolved<[\r\n  [[1, 2, 3], [5, 6, 7], [4, 8, 9]],\r\n  [[4, 8, 9], [1, 2, 3], [5, 6, 7]],\r\n  [[5, 6, 7], [4, 8, 9], [1, 2, 3]],\r\n  [[3, 1, 2], [8, 5, 6], [9, 7, 4]],\r\n  [[7, 9, 4], [3, 1, 2], [8, 5, 6]],\r\n  [[8, 5, 6], [7, 9, 4], [3, 1, 2]],\r\n  [[2, 3, 1], [6, 4, 5], [8, 9, 4]],\r\n  [[9, 7, 8], [2, 3, 1], [6, 4, 5]],\r\n  [[6, 4, 5], [9, 7, 8], [2, 3, 1]],\r\n]>\r\n\r\ntype test_sudoku_5_actual = SudokuSolved<[\r\n  [[7, 1, 5], [4, 3, 8], [6, 9, 2]],\r\n  [[4, 8, 6], [9, 2, 5], [7, 1, 3]],\r\n  [[9, 3, 2], [1, 6, 7], [4, 8, 5]],\r\n  [[6, 5, 7], [2, 8, 9], [1, 3, 4]],\r\n  [[3, 2, 8], [7, 4, 1], [9, 5, 6]],\r\n  [[1, 4, 9], [3, 5, 6], [8, 2, 7]],\r\n  [[5, 9, 1], [6, 2, 3], [2, 4, 8]],\r\n  [[2, 6, 3], [8, 9, 4], [5, 7, 1]],\r\n  [[8, 7, 4], [5, 1, 2], [3, 6, 9]],\r\n]>\r\n\r\ntype test_sudoku_6_actual = SudokuSolved<[\r\n  [[8, 9, 7], [3, 6, 1], [1, 4, 5]],\r\n  [[6, 3, 4], [1, 4, 9], [2, 8, 7]],\r\n  [[1, 2, 4], [5, 8, 7], [9, 6, 3]],\r\n  [[3, 8, 9], [6, 2, 1], [5, 7, 4]],\r\n  [[4, 7, 2], [8, 9, 5], [6, 3, 1]],\r\n  [[5, 1, 6], [4, 7, 3], [8, 2, 9]],\r\n  [[7, 5, 1], [2, 3, 8], [4, 9, 6]],\r\n  [[9, 6, 8], [7, 5, 4], [3, 1, 2]],\r\n  [[2, 4, 3], [9, 1, 6], [7, 5, 8]],\r\n]>\r\n\r\ntype test_sudoku_7_actual = SudokuSolved<[\r\n  [[1, 2, 3], [5, 6, 7], [4, 8, 9]],\r\n  [[2, 3, 5], [6, 7, 4], [8, 9, 1]],\r\n  [[3, 5, 6], [7, 4, 8], [9, 1, 2]],\r\n  [[5, 6, 7], [4, 8, 9], [1, 2, 3]],\r\n  [[6, 7, 4], [8, 9, 1], [2, 3, 5]],\r\n  [[7, 4, 8], [9, 1, 2], [3, 5, 6]],\r\n  [[4, 8, 9], [1, 2, 3], [5, 6, 7]],\r\n  [[8, 9, 1], [2, 3, 5], [6, 7, 4]],\r\n  [[9, 1, 2], [3, 5, 6], [7, 4, 8]],\r\n]>\r\n\r\ntype test_sudoku_8_actual = SudokuSolved<[\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n  [[3, 9, 2], [7, 5, 1], [8, 6, 4]],\r\n]>\r\n\r\ntype cases = [\r\n  Expect<Equal<test_sudoku_1_actual, true>>,\r\n  Expect<Equal<test_sudoku_2_actual, true>>,\r\n  Expect<Equal<test_sudoku_3_actual, true>>,\r\n  Expect<Equal<test_sudoku_4_actual, false>>,\r\n  Expect<Equal<test_sudoku_5_actual, false>>,\r\n  Expect<Equal<test_sudoku_6_actual, false>>,\r\n  Expect<Equal<test_sudoku_7_actual, false>>,\r\n  Expect<Equal<test_sudoku_8_actual, false>>,\r\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/31797/answer/ja\n  > 解答を見る：https://tsch.js.org/31797/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}