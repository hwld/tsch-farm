{"id":31824,"title":"length-of-string-3","difficulty":"hard","code":"/*\n  31824 - Length of String 3\n  -------\n  by Eosellmay Li (@E0SelmY4V) #上級\n\n  ### 質問\n\n  Implement a type `LengthOfString<S>` just like `Array#length`:\n\n  Differing to two previous challenges about strings' length, this times the type must support strings about $10^6$ characters long, which makes it more challenging.\n\n  > GitHubで確認する：https://tsch.js.org/31824/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype LengthOfString<S extends string> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype Deced = [10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\ntype Signum = Deced[number]\ntype Reped<\n  S extends string,\n  C extends Signum,\n  R extends string = '',\n>\n  = (C extends 0\n    ? R\n    : Reped<S, Deced[C], `${R}${S}`>\n  )\ntype t0 = 'k'\ntype t1 = Reped<t0, 10>\ntype t2 = Reped<t1, 10>\ntype t3 = Reped<t2, 10>\ntype t4 = Reped<t3, 10>\ntype t5 = Reped<t4, 10>\ntype t6 = Reped<t5, 10>\ntype Gened<N extends string> = N extends `${''\n  }${infer N6 extends Signum\n  }${infer N5 extends Signum\n  }${infer N4 extends Signum\n  }${infer N3 extends Signum\n  }${infer N2 extends Signum\n  }${infer N1 extends Signum\n  }${infer N0 extends Signum\n  }` ? `${''\n  }${Reped<t6, N6>\n  }${Reped<t5, N5>\n  }${Reped<t4, N4>\n  }${Reped<t3, N3>\n  }${Reped<t2, N2>\n  }${Reped<t1, N1>\n  }${Reped<t0, N0>\n  }` : never\n\ntype cases = [\n  Expect<Equal<LengthOfString<Gened<'0000000'>>, 0>>,\n  Expect<Equal<LengthOfString<Gened<'0000001'>>, 1>>,\n  Expect<Equal<LengthOfString<Gened<'0000002'>>, 2>>,\n  Expect<Equal<LengthOfString<Gened<'0000003'>>, 3>>,\n  Expect<Equal<LengthOfString<Gened<'0000004'>>, 4>>,\n  Expect<Equal<LengthOfString<Gened<'0000005'>>, 5>>,\n  Expect<Equal<LengthOfString<Gened<'0000055'>>, 55>>,\n  Expect<Equal<LengthOfString<Gened<'0000555'>>, 555>>,\n  Expect<Equal<LengthOfString<Gened<'0005555'>>, 5555>>,\n  Expect<Equal<LengthOfString<Gened<'0055555'>>, 55555>>,\n  Expect<Equal<LengthOfString<Gened<'8464592'>>, 8464592>>,\n  Expect<Equal<LengthOfString<Gened<'1373690'>>, 1373690>>,\n  Expect<Equal<LengthOfString<Gened<'1707793'>>, 1707793>>,\n  Expect<Equal<LengthOfString<Gened<'0196268'>>, 196268>>,\n  Expect<Equal<LengthOfString<Gened<'6646734'>>, 6646734>>,\n  Expect<Equal<LengthOfString<Gened<'0538159'>>, 538159>>,\n  Expect<Equal<LengthOfString<Gened<'0058901'>>, 58901>>,\n  Expect<Equal<LengthOfString<Gened<'8414001'>>, 8414001>>,\n  Expect<Equal<LengthOfString<Gened<'1740697'>>, 1740697>>,\n  Expect<Equal<LengthOfString<Gened<'2281441'>>, 2281441>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/31824/answer/ja\n  > 解答を見る：https://tsch.js.org/31824/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}