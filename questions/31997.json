{"id":31997,"difficulty":"extreme","title":"parameter-intersection","code":"/*\n  31997 - Parameter Intersection\n  -------\n  by David Blass (@ssalbdivad) #最上級 #parameters #array #variadic #optional #rest #intersection\n\n  ### 質問\n\n  Given two parameter arrays, compute a third tuple representing the type of args required to satisfy both of the original tuples.\n\n  Your solution should correctly handle fixed and non-fixed length arrays, optional elements and variadic elements. For example:\n\n  ```ts\n  type Result = IntersectParameters<\n  \t[{ a: 0 }, { b: 1 }?, { c: 2 }?, ...{ d: 3 }[]],\n  \t[{ e: 4 }?, { f: 5 }?, ...{ g: 6 }[]]\n  >\n\n  type Expected = [\n  \t{\n  \t\ta: 0\n  \t\te: 4\n  \t},\n  \t{\n  \t\tb: 1\n  \t\tf: 5\n  \t}?,\n  \t{\n  \t\tc: 2\n  \t\tg: 6\n  \t}?,\n  \t...{\n  \t\td: 3\n  \t\tg: 6\n  \t}[]\n  ]\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/31997/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype IntersectParameters<\r\n    l extends readonly unknown[],\r\n    r extends readonly unknown[],\r\n> = l & r\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype result1 = IntersectParameters<[], []>\r\ntype TwoEmpty = Expect<Equal<[], result1>>\r\n\r\ntype result2 = IntersectParameters<[], [string, number, ...boolean[]]>\r\ntype OneEmpty = Expect<Equal<[string, number, ...boolean[]], result2>>\r\n\r\ntype result3 = IntersectParameters<['a'], [string, number]>\r\ntype LongerParametersPreserved = Expect<Equal<['a', number], result3>>\r\n\r\ntype result4 = IntersectParameters<[unknown], []>\r\n// Avoids evaluating unknown to {}\r\ntype UnknownPreserved = Expect<Equal<[unknown], result4>>\r\n\r\ntype result5 = IntersectParameters<[('a' | 'b' | 'c')?], [string, 1 | 2 | 3]>\r\ntype OneOptional = Expect<Equal<['a' | 'b' | 'c', 1 | 2 | 3], result5>>\r\n\r\ntype result6 = IntersectParameters<[{ a: 0 }?], [{ b: 1 }?]>\r\ntype BothOptional = Expect<Equal<[{ a: 0, b: 1 }?], result6>>\r\n\r\ntype result7 = IntersectParameters<[{ a: 0 }?], []>\r\ntype OptionalAndNotPresent = Expect<Equal<[{ a: 0 }?], result7>>\r\n\r\ntype result8 = IntersectParameters<{ a: 0 }[], { b: 1 }[]>\r\ntype TwoNonFixedLength = Expect<Equal<{ a: 0, b: 1 }[], result8>>\r\n\r\ntype result9 = IntersectParameters<[{ a: 0 }, { b: 1 }], { c: 2 }[]>\r\ntype OneNonFixedLength = Expect<\r\n    Equal<\r\n        [\r\n          {\r\n            a: 0\r\n            c: 2\r\n          },\r\n          {\r\n            b: 1\r\n            c: 2\r\n          },\r\n          ...{\r\n            c: 2\r\n          }[],\r\n        ],\r\n        result9\r\n    >\r\n>\r\n\r\ntype result10 = IntersectParameters<\r\n    [{ a: 0 }, ...{ b: 1 }[]],\r\n    [{ c: 2 }, { d: 3 }]\r\n>\r\ntype OneTrailingRest = Expect<\r\n    Equal<\r\n        [\r\n          {\r\n            a: 0\r\n            c: 2\r\n          },\r\n          {\r\n            b: 1\r\n            d: 3\r\n          },\r\n          ...{\r\n            b: 1\r\n          }[],\r\n        ],\r\n        result10\r\n    >\r\n>\r\n\r\ntype result11 = IntersectParameters<\r\n    [{ a: 0 }, ...{ b: 1 }[]],\r\n    [{ c: 2 }, { d: 3 }, ...{ e: 4 }[]]\r\n>\r\ntype TwoTrailingRest = Expect<\r\n    Equal<\r\n        [\r\n          {\r\n            a: 0\r\n            c: 2\r\n          },\r\n          {\r\n            b: 1\r\n            d: 3\r\n          },\r\n          ...{\r\n            b: 1\r\n            e: 4\r\n          }[],\r\n        ],\r\n        result11\r\n    >\r\n>\r\n\r\ntype result12 = IntersectParameters<\r\n    [{ a: 0 }, { b: 1 }?, { c: 2 }?, ...{ d: 3 }[]],\r\n    [{ e: 4 }?, { f: 5 }?, ...{ g: 6 }[]]\r\n>\r\ntype KitchenSink = Expect<\r\n    Equal<\r\n        [\r\n          {\r\n            a: 0\r\n            e: 4\r\n          },\r\n            {\r\n              b: 1\r\n              f: 5\r\n            }?,\r\n            {\r\n              c: 2\r\n              g: 6\r\n            }?,\r\n            ...{\r\n              d: 3\r\n              g: 6\r\n            }[],\r\n        ],\r\n        result12\r\n    >\r\n>\r\n\r\ntype result13 = IntersectParameters<['a', 'b'], [string, ...string[]]>\r\ntype ExtraVariadicArgsPreserved = Expect<\r\n    Equal<['a', 'b', ...string[]], result13>\r\n>\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/31997/answer/ja\n  > 解答を見る：https://tsch.js.org/31997/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}