{"id":89,"title":"required-keys","difficulty":"hard","code":"/*\n  89 - Required Keys\n  -------\n  by yituan (@yi-tuan) #上級 #utils\n\n  ### 質問\n\n  必須なキーの Union を抽出する高度なユーティリティ型 `RequiredKeys<T>` を実装してください。\n\n  例えば\n\n  ```ts\n  type Result = RequiredKeys<{ foo: number; bar?: string }>;\n  // expected to be “foo”\n  ```\n\n  > GitHubで確認する：https://tsch.js.org/89/ja\n*/\n\n/* _____________ ここにコードを記入 _____________ */\n\ntype RequiredKeys<T> = any\n\n/* _____________ テストケース _____________ */\nimport type { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<RequiredKeys<{ a: number, b?: string }>, 'a'>>,\n  Expect<Equal<RequiredKeys<{ a: undefined, b?: undefined }>, 'a'>>,\n  Expect<Equal<RequiredKeys<{ a: undefined, b?: undefined, c: string, d: null }>, 'a' | 'c' | 'd'>>,\n  Expect<Equal<RequiredKeys<{}>, never>>,\n]\n\n/* _____________ 次のステップ _____________ */\n/*\n  > 解答を共有する：https://tsch.js.org/89/answer/ja\n  > 解答を見る：https://tsch.js.org/89/solutions\n  > その他の課題：https://tsch.js.org/ja\n*/\n"}